[{"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\index.js":"1","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\App.jsx":"2","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\header.jsx":"3","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\navigation.jsx":"4","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Login.jsx":"5","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\about.jsx":"6","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Signup.jsx":"7","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\footer.jsx":"8","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Dashboard.jsx":"9","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Sidebar.jsx":"10","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Contact.jsx":"11","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\PreviewAndProfiling.jsx":"12","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\DataUpload.jsx":"13","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\RedundancyCleaning.jsx":"14","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\OutlierDetection.jsx":"15","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\DataStandardization.jsx":"16","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\DataTransformation.jsx":"17","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\CollaborativeCleaning.jsx":"18","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\ExportOptions.jsx":"19","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\ProfilePage.jsx":"20","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Logout.jsx":"21","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\dummy.jsx":"22","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Dummy.jsx":"23"},{"size":509,"mtime":1736098727950,"results":"24","hashOfConfig":"25"},{"size":3553,"mtime":1737274001168,"results":"26","hashOfConfig":"25"},{"size":1100,"mtime":1737095161957,"results":"27","hashOfConfig":"25"},{"size":2239,"mtime":1737096327619,"results":"28","hashOfConfig":"25"},{"size":2733,"mtime":1736687364014,"results":"29","hashOfConfig":"25"},{"size":2003,"mtime":1736868293735,"results":"30","hashOfConfig":"25"},{"size":3434,"mtime":1736397993487,"results":"31","hashOfConfig":"25"},{"size":1622,"mtime":1736397182948,"results":"32","hashOfConfig":"25"},{"size":2259,"mtime":1737096740655,"results":"33","hashOfConfig":"25"},{"size":2496,"mtime":1737278625362,"results":"34","hashOfConfig":"25"},{"size":4875,"mtime":1736870278111,"results":"35","hashOfConfig":"25"},{"size":7976,"mtime":1737308899012,"results":"36","hashOfConfig":"25"},{"size":8262,"mtime":1737308130047,"results":"37","hashOfConfig":"25"},{"size":4174,"mtime":1736920608008,"results":"38","hashOfConfig":"25"},{"size":369,"mtime":1736439943029,"results":"39","hashOfConfig":"25"},{"size":386,"mtime":1736439991297,"results":"40","hashOfConfig":"25"},{"size":369,"mtime":1736440367521,"results":"41","hashOfConfig":"25"},{"size":374,"mtime":1736440441743,"results":"42","hashOfConfig":"25"},{"size":343,"mtime":1736440482770,"results":"43","hashOfConfig":"25"},{"size":2143,"mtime":1737093980078,"results":"44","hashOfConfig":"25"},{"size":310,"mtime":1736441337611,"results":"45","hashOfConfig":"25"},{"size":651,"mtime":1737273490332,"results":"46","hashOfConfig":"25"},{"size":651,"mtime":1737275705846,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},"16kf6hc",{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"51"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\index.js",[],[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\App.jsx",["120","121"],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\header.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\navigation.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Login.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\about.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Signup.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\footer.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Dashboard.jsx",["122","123","124","125","126","127","128","129","130","131","132"],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Sidebar.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Contact.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\PreviewAndProfiling.jsx",["133"],[],"// import React, { useState, useEffect } from \"react\";\r\n// import axios from \"axios\";\r\n// import { Bar } from \"react-chartjs-2\";\r\n// import {\r\n//   Chart as ChartJS,\r\n//   CategoryScale,\r\n//   LinearScale,\r\n//   BarElement,\r\n//   Tooltip,\r\n//   Legend,\r\n// } from \"chart.js\";\r\n// import \"./PreviewAndProfiling.css\";\r\n\r\n// // Register chart.js components\r\n// ChartJS.register(CategoryScale, LinearScale, BarElement, Tooltip, Legend);\r\n\r\n// const PreviewAndProfile = () => {\r\n//   const [data, setData] = useState([]);\r\n//   const [summary, setSummary] = useState(null);\r\n//   const [loading, setLoading] = useState(true);\r\n//   const [error, setError] = useState(null);\r\n\r\n//   useEffect(() => {\r\n//     axios\r\n//       .get(\"http://localhost:3000/data\")\r\n//       .then((response) => {\r\n//         const fetchedData = response.data;\r\n//         if (fetchedData.length > 0) {\r\n//           setData(fetchedData);\r\n//           generateSummary(fetchedData);\r\n//         } else {\r\n//           setError(\"No data available\");\r\n//         }\r\n//       })\r\n//       .catch((err) => {\r\n//         console.error(\"Error fetching data:\", err);\r\n//         setError(\"Failed to fetch data\");\r\n//       })\r\n//       .finally(() => {\r\n//         setLoading(false);\r\n//       });\r\n//   }, []);\r\n\r\n//   const generateSummary = (data) => {\r\n//     const headers = data[0];\r\n//     const summary = headers.map((columnName, index) => {\r\n//       const columnData = data\r\n//         .slice(1)\r\n//         .map((row) => row[index]?.trim() || \"\"); // Handle undefined/null values\r\n//       const isNumeric = columnData.every((value) => value && !isNaN(value));\r\n//       const missingValues = columnData.filter((value) => value === \"\").length;\r\n//       const uniqueValues = new Set(columnData).size;\r\n//       const duplicates = columnData.length > uniqueValues;\r\n//       const statistics = isNumeric ? calculateStatistics(columnData) : {};\r\n\r\n//       return {\r\n//         columnName,\r\n//         dataType: isNumeric ? \"Number\" : \"String\",\r\n//         missingValues,\r\n//         duplicates,\r\n//         ...statistics,\r\n//       };\r\n//     });\r\n\r\n//     setSummary(summary);\r\n//   };\r\n\r\n//   const calculateStatistics = (data) => {\r\n//     const numbers = data.filter((value) => !isNaN(value)).map(Number);\r\n//     if (numbers.length === 0) return {};\r\n//     const mean = numbers.reduce((sum, num) => sum + num, 0) / numbers.length;\r\n//     const min = Math.min(...numbers);\r\n//     const max = Math.max(...numbers);\r\n//     return { mean, min, max };\r\n//   };\r\n\r\n//   if (loading) {\r\n//     return <div>Loading data...</div>;\r\n//   }\r\n\r\n//   if (error) {\r\n//     return <div>Error: {error}</div>;\r\n//   }\r\n\r\n//   const renderVisuals = () => {\r\n//     const numericColumns = summary.filter((col) => col.dataType === \"Number\");\r\n//     if (numericColumns.length === 0) {\r\n//       return <p>No numeric data available for visualization.</p>;\r\n//     }\r\n\r\n//     return (\r\n//       <div className=\"visual-statistics\">\r\n//         <h3>Visual Statistics</h3>\r\n//         {numericColumns.map((col, index) => (\r\n//           <div key={index} className=\"chart-container\">\r\n//             <h4>{col.columnName}</h4>\r\n//             <Bar\r\n//               data={{\r\n//                 labels: [\"Mean\", \"Min\", \"Max\"],\r\n//                 datasets: [\r\n//                   {\r\n//                     label: col.columnName,\r\n//                     data: [col.mean, col.min, col.max],\r\n//                     backgroundColor: [\"#4caf50\", \"#2196f3\", \"#ff5722\"],\r\n//                   },\r\n//                 ],\r\n//               }}\r\n//               options={{\r\n//                 responsive: true,\r\n//                 plugins: {\r\n//                   legend: { display: false },\r\n//                 },\r\n//               }}\r\n//             />\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//     );\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"preview-and-profiling\">\r\n//       <h2>Preview and Profiling</h2>\r\n\r\n//       <div className=\"data-preview\">\r\n//         <h3>Data Preview</h3>\r\n//         {data.length > 1 ? (\r\n//           <table>\r\n//             <thead>\r\n//               <tr>\r\n//                 {data[0]?.map((header, index) => (\r\n//                   <th key={index}>{header}</th>\r\n//                 ))}\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {data.slice(1).map((row, rowIndex) => (\r\n//                 <tr key={rowIndex}>\r\n//                   {row.map((cell, cellIndex) => (\r\n//                     <td key={cellIndex}>{cell || \"-\"}</td>\r\n//                   ))}\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         ) : (\r\n//           <p>No data to display</p>\r\n//         )}\r\n//       </div>\r\n\r\n//       {summary && (\r\n//         <div className=\"data-summary\">\r\n//           <h3>Summary Report</h3>\r\n//           <table>\r\n//             <thead>\r\n//               <tr>\r\n//                 <th>Column Name</th>\r\n//                 <th>Data Type</th>\r\n//                 <th>Missing Values</th>\r\n//                 <th>Duplicates</th>\r\n//                 <th>Mean</th>\r\n//                 <th>Min</th>\r\n//                 <th>Max</th>\r\n//               </tr>\r\n//             </thead>\r\n//             <tbody>\r\n//               {summary.map((col, index) => (\r\n//                 <tr key={index}>\r\n//                   <td>{col.columnName}</td>\r\n//                   <td>{col.dataType}</td>\r\n//                   <td>{col.missingValues}</td>\r\n//                   <td>{col.duplicates ? \"Yes\" : \"No\"}</td>\r\n//                   <td>{col.mean !== undefined ? col.mean.toFixed(2) : \"-\"}</td>\r\n//                   <td>{col.min !== undefined ? col.min : \"-\"}</td>\r\n//                   <td>{col.max !== undefined ? col.max : \"-\"}</td>\r\n//                 </tr>\r\n//               ))}\r\n//             </tbody>\r\n//           </table>\r\n//         </div>\r\n//       )}\r\n\r\n//       {summary && renderVisuals()}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default PreviewAndProfile;\r\n\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst PreviewAndProfiling = () => {\r\n  const [summary, setSummary] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  // Access the table name from the URL query parameters (we will assume the uploaded file creates a table with the name of the file)\r\n  const location = useLocation();\r\n  const tableName = new URLSearchParams(location.search).get(\"data\");\r\n\r\n  // Fetch summary when component mounts (or when tableName changes)\r\n  useEffect(() => {\r\n    if (tableName) {\r\n      fetchSummary();\r\n    }\r\n  }, [tableName]);\r\n\r\n  const fetchSummary = async () => {\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5001/preview_summary\", {\r\n        params: { table_name: tableName },\r\n      });\r\n      setSummary(response.data);\r\n      setError(\"\");\r\n    } catch (err) {\r\n      setError(err.response?.data?.error || \"An error occurred\");\r\n      setSummary(null);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"20px\" }}>\r\n      <h2>Preview and Profiling</h2>\r\n\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n\r\n      {summary && (\r\n        <div style={{ marginTop: \"20px\" }}>\r\n          <h3>Summary Report for Table: {tableName}</h3>\r\n          <p><strong>Column Names:</strong> {summary.column_names.join(\", \")}</p>\r\n          <p><strong>Data Types:</strong> {summary.data_types.join(\", \")}</p>\r\n          <p><strong>Missing Values:</strong> {summary.missing_values.join(\", \")}</p>\r\n          <p><strong>Duplicates:</strong> {summary.duplicates}</p>\r\n          <h4>Key Statistics:</h4>\r\n          <pre style={{ background: \"#f0f0f0\", padding: \"10px\" }}>\r\n            {JSON.stringify(summary.key_statistics, null, 2)}\r\n          </pre>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewAndProfiling;\r\n","C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\DataUpload.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\RedundancyCleaning.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\OutlierDetection.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\DataStandardization.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\DataTransformation.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\CollaborativeCleaning.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\ExportOptions.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\ProfilePage.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Logout.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\dummy.jsx",[],[],"C:\\xampp\\htdocs\\intellicleanse\\intellicleanse\\src\\components\\Dummy.jsx",[],[],[],{"ruleId":"134","severity":1,"message":"135","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"138","line":1,"column":27,"nodeType":"136","messageId":"137","endLine":1,"endColumn":36},{"ruleId":"134","severity":1,"message":"135","line":1,"column":17,"nodeType":"136","messageId":"137","endLine":1,"endColumn":25},{"ruleId":"134","severity":1,"message":"139","line":6,"column":8,"nodeType":"136","messageId":"137","endLine":6,"endColumn":18},{"ruleId":"134","severity":1,"message":"140","line":7,"column":8,"nodeType":"136","messageId":"137","endLine":7,"endColumn":27},{"ruleId":"134","severity":1,"message":"141","line":8,"column":8,"nodeType":"136","messageId":"137","endLine":8,"endColumn":26},{"ruleId":"134","severity":1,"message":"142","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":24},{"ruleId":"134","severity":1,"message":"143","line":10,"column":8,"nodeType":"136","messageId":"137","endLine":10,"endColumn":27},{"ruleId":"134","severity":1,"message":"144","line":11,"column":8,"nodeType":"136","messageId":"137","endLine":11,"endColumn":26},{"ruleId":"134","severity":1,"message":"145","line":12,"column":8,"nodeType":"136","messageId":"137","endLine":12,"endColumn":29},{"ruleId":"134","severity":1,"message":"146","line":13,"column":8,"nodeType":"136","messageId":"137","endLine":13,"endColumn":21},{"ruleId":"134","severity":1,"message":"147","line":14,"column":8,"nodeType":"136","messageId":"137","endLine":14,"endColumn":19},{"ruleId":"134","severity":1,"message":"148","line":15,"column":8,"nodeType":"136","messageId":"137","endLine":15,"endColumn":14},{"ruleId":"149","severity":1,"message":"150","line":208,"column":6,"nodeType":"151","endLine":208,"endColumn":17,"suggestions":"152"},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'DataUpload' is defined but never used.","'PreviewAndProfiling' is defined but never used.","'RedundancyCleaning' is defined but never used.","'OutlierDetection' is defined but never used.","'DataStandardization' is defined but never used.","'DataTransformation' is defined but never used.","'CollaborativeCleaning' is defined but never used.","'ExportOptions' is defined but never used.","'ProfilePage' is defined but never used.","'Logout' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchSummary'. Either include it or remove the dependency array.","ArrayExpression",["153"],{"desc":"154","fix":"155"},"Update the dependencies array to be: [fetchSummary, tableName]",{"range":"156","text":"157"},[6725,6736],"[fetchSummary, tableName]"]