{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\intellicleanse\\\\intellicleanse\\\\src\\\\components\\\\DataUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./DataUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataUpload = () => {\n  _s();\n  const handleFunctionalityClick = name => {\n    console.log(\"Selected functionality:\", name); // Debug\n\n    // Mapping functionalities to routes\n    const routeMap = {\n      \"Data Upload\": \"/dataupload\",\n      \"Preview and Profiling\": \"/previewandprofiling\",\n      \"Redundancy and Consistency Cleaning\": \"/redundancy-cleaning\",\n      \"Outlier Detection\": \"/outlier-detection\",\n      \"Data Standardization\": \"/data-standardization\",\n      \"Data Transformation\": \"/data-transformation\",\n      \"Collaborative Cleaning\": \"/collaborative-cleaning\",\n      \"Export Options\": \"/export-options\",\n      \"Profile\": \"/profile\",\n      \"Logout\": \"/logout\"\n    };\n\n    // Navigate to the respective route\n    if (routeMap[name]) {\n      navigate(routeMap[name]);\n    }\n  };\n  const [file, setFile] = useState(null);\n  const navigate = useNavigate();\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a file.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:3000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (response.status === 200) {\n        alert(\"File uploaded successfully!\");\n        navigate(\"/previewandprofiling\");\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"There was an error uploading the file.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-upload\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Dataset\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv, .xlsx\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(DataUpload, \"a8hUmGYItl0fyIx8Tvn6au4ZieE=\", false, function () {\n  return [useNavigate];\n});\n_c = DataUpload;\nexport default DataUpload;\nvar _c;\n$RefreshReg$(_c, \"DataUpload\");","map":{"version":3,"names":["React","useState","useNavigate","axios","DataUpload","handleFunctionalityClick","name","console","log","routeMap","navigate","file","setFile","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","post","headers","status","error"],"sources":["C:/xampp/htdocs/intellicleanse/intellicleanse/src/components/DataUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./DataUpload.css\";\r\n\r\nconst DataUpload = () => {\r\n\r\n  \r\n  const handleFunctionalityClick = (name) => {\r\n    console.log(\"Selected functionality:\", name); // Debug\r\n    \r\n    // Mapping functionalities to routes\r\n    const routeMap = {\r\n      \"Data Upload\": \"/dataupload\",\r\n      \"Preview and Profiling\": \"/previewandprofiling\",\r\n      \"Redundancy and Consistency Cleaning\": \"/redundancy-cleaning\",\r\n      \"Outlier Detection\": \"/outlier-detection\",\r\n      \"Data Standardization\": \"/data-standardization\",\r\n      \"Data Transformation\": \"/data-transformation\",\r\n      \"Collaborative Cleaning\": \"/collaborative-cleaning\",\r\n      \"Export Options\": \"/export-options\",\r\n      \"Profile\": \"/profile\",\r\n      \"Logout\": \"/logout\"\r\n    };\r\n\r\n    // Navigate to the respective route\r\n    if (routeMap[name]) {\r\n      navigate(routeMap[name]);\r\n    }\r\n  };\r\n\r\n\r\n  const [file, setFile] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return alert(\"Please select a file.\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        alert(\"File uploaded successfully!\");\r\n          navigate(\"/previewandprofiling\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      alert(\"There was an error uploading the file.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-upload\">\r\n      <h2>Upload Dataset</h2>\r\n      <div className=\"file-upload\">\r\n        <input type=\"file\" accept=\".csv, .xlsx\" onChange={handleFileChange} />\r\n      </div>\r\n      <button onClick={handleUpload}>Upload</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataUpload;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC;AAE1B,MAAMC,UAAU,GAAG,MAAM;EAAA;EAGvB,MAAMC,wBAAwB,GAAIC,IAAI,IAAK;IACzCC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,IAAI,CAAC,CAAC,CAAC;;IAE9C;IACA,MAAMG,QAAQ,GAAG;MACf,aAAa,EAAE,aAAa;MAC5B,uBAAuB,EAAE,sBAAsB;MAC/C,qCAAqC,EAAE,sBAAsB;MAC7D,mBAAmB,EAAE,oBAAoB;MACzC,sBAAsB,EAAE,uBAAuB;MAC/C,qBAAqB,EAAE,sBAAsB;MAC7C,wBAAwB,EAAE,yBAAyB;MACnD,gBAAgB,EAAE,iBAAiB;MACnC,SAAS,EAAE,UAAU;MACrB,QAAQ,EAAE;IACZ,CAAC;;IAED;IACA,IAAIA,QAAQ,CAACH,IAAI,CAAC,EAAE;MAClBI,QAAQ,CAACD,QAAQ,CAACH,IAAI,CAAC,CAAC;IAC1B;EACF,CAAC;EAGD,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMS,QAAQ,GAAGR,WAAW,EAAE;EAE9B,MAAMW,gBAAgB,GAAIC,CAAC,IAAK;IAC9BF,OAAO,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,YAAY;IAC/B,IAAI,CAACN,IAAI,EAAE,OAAOO,KAAK,CAAC,uBAAuB,CAAC;IAEhD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEV,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QAC1EK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3BP,KAAK,CAAC,6BAA6B,CAAC;QAClCR,QAAQ,CAAC,sBAAsB,CAAC;MACpC;IACF,CAAC,CAAC,OAAOgB,KAAK,EAAE;MACdnB,OAAO,CAACmB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CR,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,aAAa;IAAA,wBAC1B;MAAA,UAAI;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,eACvB;MAAK,SAAS,EAAC,aAAa;MAAA,uBAC1B;QAAO,IAAI,EAAC,MAAM;QAAC,MAAM,EAAC,aAAa;QAAC,QAAQ,EAAEL;MAAiB;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QAClE,eACN;MAAQ,OAAO,EAAEI,YAAa;MAAA,UAAC;IAAM;MAAA;MAAA;MAAA;IAAA,QAAS;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1C;AAEV,CAAC;AAAC,GAlEIb,UAAU;EAAA,QA4BGF,WAAW;AAAA;AAAA,KA5BxBE,UAAU;AAoEhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}