{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\intellicleanse\\\\intellicleanse\\\\src\\\\components\\\\PreviewAndProfiling.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./PreviewAndProfiling.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PreviewAndProfiling = () => {\n  _s();\n  const [preview, setPreview] = useState(null);\n  const [plot, setPlot] = useState(null);\n  const [error, setError] = useState(\"\");\n  const handleFileUpload = async event => {\n    const file = event.target.files[0];\n    if (!file) {\n      setError(\"No file selected!\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"http://localhost:5000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log(\"Response Data: \", data); // Log the response to check if the backend is working\n\n        setPreview(data.preview);\n        setPlot(data.plot);\n        setError(\"\");\n      } else {\n        const errorData = await response.json();\n        console.error(\"Error Data: \", errorData); // Log any errors received from the backend\n        setError(errorData.error || \"An error occurred!\");\n      }\n    } catch (err) {\n      console.error(\"Error connecting to the server: \", err); // Log the error\n      setError(\"Failed to connect to the server!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preview-and-profiling\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Preview and Profiling\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Analyze and preview your data structure with visualization.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"file-upload\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".csv, .xlsx\",\n        onChange: handleFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this), preview && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-preview\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Data Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(preview[0]).map(key => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: key\n            }, key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: preview.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(row).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: value\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this), plot && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-visualization\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: plot,\n        alt: \"Data Visualization\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(PreviewAndProfiling, \"o8y1TwWhxe1TFy6yMoO8D0ujFaU=\");\n_c = PreviewAndProfiling;\nexport default PreviewAndProfiling;\nvar _c;\n$RefreshReg$(_c, \"PreviewAndProfiling\");","map":{"version":3,"names":["React","useState","PreviewAndProfiling","preview","setPreview","plot","setPlot","error","setError","handleFileUpload","event","file","target","files","formData","FormData","append","response","fetch","method","body","ok","data","json","console","log","errorData","err","Object","keys","map","key","row","index","values","value","idx"],"sources":["C:/xampp/htdocs/intellicleanse/intellicleanse/src/components/PreviewAndProfiling.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./PreviewAndProfiling.css\";\r\n\r\nconst PreviewAndProfiling = () => {\r\n  const [preview, setPreview] = useState(null);\r\n  const [plot, setPlot] = useState(null);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleFileUpload = async (event) => {\r\n  const file = event.target.files[0];\r\n\r\n  if (!file) {\r\n    setError(\"No file selected!\");\r\n    return;\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"file\", file);\r\n\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/upload\", {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      console.log(\"Response Data: \", data);  // Log the response to check if the backend is working\r\n\r\n      setPreview(data.preview);\r\n      setPlot(data.plot);\r\n      setError(\"\");\r\n    } else {\r\n      const errorData = await response.json();\r\n      console.error(\"Error Data: \", errorData);  // Log any errors received from the backend\r\n      setError(errorData.error || \"An error occurred!\");\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Error connecting to the server: \", err);  // Log the error\r\n    setError(\"Failed to connect to the server!\");\r\n  }\r\n};\r\n\r\n  return (\r\n    <div className=\"preview-and-profiling\">\r\n      <h2>Preview and Profiling</h2>\r\n      <p>Analyze and preview your data structure with visualization.</p>\r\n\r\n      <div className=\"file-upload\">\r\n        <input type=\"file\" accept=\".csv, .xlsx\" onChange={handleFileUpload} />\r\n      </div>\r\n\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      {preview && (\r\n        <div className=\"data-preview\">\r\n          <h3>Data Preview</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {Object.keys(preview[0]).map((key) => (\r\n                  <th key={key}>{key}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {preview.map((row, index) => (\r\n                <tr key={index}>\r\n                  {Object.values(row).map((value, idx) => (\r\n                    <td key={idx}>{value}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {plot && (\r\n        <div className=\"data-visualization\">\r\n          <h3>Visualization</h3>\r\n          <img src={plot} alt=\"Data Visualization\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PreviewAndProfiling;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}