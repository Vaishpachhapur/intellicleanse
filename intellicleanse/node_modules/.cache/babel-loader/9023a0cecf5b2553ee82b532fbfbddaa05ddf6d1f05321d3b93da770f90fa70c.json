{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\intellicleanse\\\\intellicleanse\\\\src\\\\components\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // Import the useNavigate hook to navigate programmatically\nimport \"./login.css\"; // Ensure you have a login.css file to style the login page\n\n/**\r\n * Login page component for the web application.\r\n * Allows users to log in with their email and password.\r\n *\r\n * @component\r\n * @example\r\n * return (\r\n *   <Login />\r\n * )\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate(); // Initialize useNavigate to programmatically navigate to another page\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Check if the credentials match the hardcoded values\n    if (email === \"test@example.com\" && password === \"testpassword\") {\n      // Successful login, open a new blank page\n      window.open(\"\", \"/dash\"); // Opens a new blank page\n      navigate(\"/\"); // Redirect to the home page (or any other page you want)\n    } else {\n      alert(\"Invalid credentials. Please try again.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login to Intellicleanse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Enter your password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"login-btn\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signup\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"rIjyA2uJXTJXGlQGcq/HSho2Mo8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Login","email","setEmail","password","setPassword","navigate","handleSubmit","e","preventDefault","window","open","alert","target","value"],"sources":["C:/xampp/htdocs/intellicleanse/intellicleanse/src/components/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // Import the useNavigate hook to navigate programmatically\r\nimport \"./login.css\"; // Ensure you have a login.css file to style the login page\r\n\r\n/**\r\n * Login page component for the web application.\r\n * Allows users to log in with their email and password.\r\n *\r\n * @component\r\n * @example\r\n * return (\r\n *   <Login />\r\n * )\r\n */\r\nconst Login = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate(); // Initialize useNavigate to programmatically navigate to another page\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Check if the credentials match the hardcoded values\r\n    if (email === \"test@example.com\" && password === \"testpassword\") {\r\n      // Successful login, open a new blank page\r\n      window.open(\"\", \"/dash\"); // Opens a new blank page\r\n      navigate(\"/\"); // Redirect to the home page (or any other page you want)\r\n    } else {\r\n      alert(\"Invalid credentials. Please try again.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h1>Login to Intellicleanse</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-group\">\r\n          <label>Email</label>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Enter your email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"input-group\">\r\n          <label>Password</label>\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Enter your password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"login-btn\">Login</button>\r\n        <p>Don't have an account? <a href=\"/signup\">Sign Up</a></p>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAO,aAAa,CAAC,CAAC;;AAEtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAUA,MAAMC,KAAK,GAAG,MAAM;EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACK,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMO,QAAQ,GAAGN,WAAW,EAAE,CAAC,CAAC;;EAEhC,MAAMO,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;;IAElB;IACA,IAAIP,KAAK,KAAK,kBAAkB,IAAIE,QAAQ,KAAK,cAAc,EAAE;MAC/D;MACAM,MAAM,CAACC,IAAI,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC,CAAC;MAC1BL,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;IACjB,CAAC,MAAM;MACLM,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,iBAAiB;IAAA,wBAC9B;MAAA,UAAI;IAAuB;MAAA;MAAA;MAAA;IAAA,QAAK,eAChC;MAAM,QAAQ,EAAEL,YAAa;MAAA,wBAC3B;QAAK,SAAS,EAAC,aAAa;QAAA,wBAC1B;UAAA,UAAO;QAAK;UAAA;UAAA;UAAA;QAAA,QAAQ,eACpB;UACE,IAAI,EAAC,OAAO;UACZ,WAAW,EAAC,kBAAkB;UAC9B,KAAK,EAAEL,KAAM;UACb,QAAQ,EAAGM,CAAC,IAAKL,QAAQ,CAACK,CAAC,CAACK,MAAM,CAACC,KAAK,CAAE;UAC1C,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACR;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAK,SAAS,EAAC,aAAa;QAAA,wBAC1B;UAAA,UAAO;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAQ,eACvB;UACE,IAAI,EAAC,UAAU;UACf,WAAW,EAAC,qBAAqB;UACjC,KAAK,EAAEV,QAAS;UAChB,QAAQ,EAAGI,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACK,MAAM,CAACC,KAAK,CAAE;UAC7C,QAAQ;QAAA;UAAA;UAAA;UAAA;QAAA,QACR;MAAA;QAAA;QAAA;QAAA;MAAA,QACE,eACN;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,WAAW;QAAA,UAAC;MAAK;QAAA;QAAA;QAAA;MAAA,QAAS,eAC1D;QAAA,WAAG,yBAAuB;UAAG,IAAI,EAAC,SAAS;UAAA,UAAC;QAAO;UAAA;UAAA;UAAA;QAAA,QAAI;MAAA;QAAA;QAAA;QAAA;MAAA,QAAI;IAAA;MAAA;MAAA;MAAA;IAAA,QACtD;EAAA;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,GA/CIb,KAAK;EAAA,QAGQD,WAAW;AAAA;AAAA,KAHxBC,KAAK;AAiDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}