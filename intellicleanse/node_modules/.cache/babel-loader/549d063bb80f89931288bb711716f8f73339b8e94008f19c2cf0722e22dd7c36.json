{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\intellicleanse\\\\intellicleanse\\\\src\\\\components\\\\DataUpload.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Sidebar from \"./Sidebar\"; // Import Sidebar component\nimport axios from \"axios\";\nimport \"./DataUpload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DataUpload = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const navigate = useNavigate();\n\n  // Define the functionalities you want to display in the sidebar\n  const functionalities = [\"Data Upload\", \"Preview and Profiling\", \"Redundancy and Consistency Cleaning\", \"Outlier Detection\", \"Data Standardization\", \"Data Transformation\", \"Collaborative Cleaning\", \"Export Options\", \"Profile\", \"Logout\"];\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) return alert(\"Please select a file.\");\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await axios.post(\"http://localhost:3000/upload\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      if (response.status === 200) {\n        alert(\"File uploaded successfully!\");\n        navigate(\"/previewandprofiling\"); // Navigate to preview and profiling page after upload\n      }\n    } catch (error) {\n      console.error(\"Error uploading file:\", error);\n      alert(\"There was an error uploading the file.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      functionalities: functionalities,\n      onFunctionalityClick: func => console.log(`${func} clicked`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-upload\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload Dataset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"file-upload\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \".csv, .xlsx\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(DataUpload, \"a8hUmGYItl0fyIx8Tvn6au4ZieE=\", false, function () {\n  return [useNavigate];\n});\n_c = DataUpload;\nexport default DataUpload;\nvar _c;\n$RefreshReg$(_c, \"DataUpload\");","map":{"version":3,"names":["React","useState","useNavigate","Sidebar","axios","DataUpload","file","setFile","navigate","functionalities","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","post","headers","status","error","console","func","log"],"sources":["C:/xampp/htdocs/intellicleanse/intellicleanse/src/components/DataUpload.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Sidebar from \"./Sidebar\"; // Import Sidebar component\r\nimport axios from \"axios\";\r\nimport \"./DataUpload.css\";\r\n\r\nconst DataUpload = () => {\r\n  const [file, setFile] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Define the functionalities you want to display in the sidebar\r\n  const functionalities = [\"Data Upload\",\r\n    \"Preview and Profiling\",\r\n    \"Redundancy and Consistency Cleaning\",\r\n    \"Outlier Detection\",\r\n    \"Data Standardization\",\r\n    \"Data Transformation\",\r\n    \"Collaborative Cleaning\",\r\n    \"Export Options\",\r\n    \"Profile\", \r\n    \"Logout\"];\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!file) return alert(\"Please select a file.\");\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/upload\", formData, {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        alert(\"File uploaded successfully!\");\r\n        navigate(\"/previewandprofiling\"); // Navigate to preview and profiling page after upload\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error uploading file:\", error);\r\n      alert(\"There was an error uploading the file.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"data-upload-container\">\r\n      {/* Add Sidebar here */}\r\n      <Sidebar functionalities={functionalities} onFunctionalityClick={(func) => console.log(`${func} clicked`)} />\r\n\r\n      <div className=\"data-upload\">\r\n        <h2>Upload Dataset</h2>\r\n        <div className=\"file-upload\">\r\n          <input type=\"file\" accept=\".csv, .xlsx\" onChange={handleFileChange} />\r\n        </div>\r\n        <button onClick={handleUpload}>Upload</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataUpload;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,OAAO,MAAM,WAAW,CAAC,CAAC;AACjC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC;AAE1B,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAMO,QAAQ,GAAGN,WAAW,EAAE;;EAE9B;EACA,MAAMO,eAAe,GAAG,CAAC,aAAa,EACpC,uBAAuB,EACvB,qCAAqC,EACrC,mBAAmB,EACnB,sBAAsB,EACtB,qBAAqB,EACrB,wBAAwB,EACxB,gBAAgB,EAChB,SAAS,EACT,QAAQ,CAAC;EAEX,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5B,CAAC;EAED,MAAMC,YAAY,GAAG,YAAY;IAC/B,IAAI,CAACR,IAAI,EAAE,OAAOS,KAAK,CAAC,uBAAuB,CAAC;IAEhD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEZ,IAAI,CAAC;IAE7B,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,8BAA8B,EAAEJ,QAAQ,EAAE;QAC1EK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB;MACF,CAAC,CAAC;MAEF,IAAIF,QAAQ,CAACG,MAAM,KAAK,GAAG,EAAE;QAC3BP,KAAK,CAAC,6BAA6B,CAAC;QACpCP,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;MACpC;IACF,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CR,KAAK,CAAC,wCAAwC,CAAC;IACjD;EACF,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,uBAAuB;IAAA,wBAEpC,QAAC,OAAO;MAAC,eAAe,EAAEN,eAAgB;MAAC,oBAAoB,EAAGgB,IAAI,IAAKD,OAAO,CAACE,GAAG,CAAE,GAAED,IAAK,UAAS;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG,eAE7G;MAAK,SAAS,EAAC,aAAa;MAAA,wBAC1B;QAAA,UAAI;MAAc;QAAA;QAAA;QAAA;MAAA,QAAK,eACvB;QAAK,SAAS,EAAC,aAAa;QAAA,uBAC1B;UAAO,IAAI,EAAC,MAAM;UAAC,MAAM,EAAC,aAAa;UAAC,QAAQ,EAAEf;QAAiB;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAClE,eACN;QAAQ,OAAO,EAAEI,YAAa;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QAC1C;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV,CAAC;AAAC,GAzDIT,UAAU;EAAA,QAEGH,WAAW;AAAA;AAAA,KAFxBG,UAAU;AA2DhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}