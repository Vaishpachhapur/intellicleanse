{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\intellicleanse\\\\intellicleanse\\\\src\\\\components\\\\ProfilePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [image, setImage] = useState(null);\n  const [newName, setNewName] = useState('');\n  useEffect(() => {\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3000/profile\", {\n          params: {\n            email: \"user@example.com\"\n          } // replace with dynamic user email if needed\n        });\n\n        setUser(response.data);\n        setImage(response.data.image); // Set the image from the database (if exists)\n        setNewName(response.data.username); // Set the existing name\n      } catch (error) {\n        console.error(\"Error fetching user data:\", error);\n      }\n    };\n    fetchUserData();\n  }, []);\n  const handleImageChange = e => {\n    setImage(URL.createObjectURL(e.target.files[0])); // Preview the image before uploading\n  };\n\n  const handleUpdateProfile = async () => {\n    const formData = new FormData();\n    formData.append('email', \"user@example.com\"); // replace with dynamic user email\n    formData.append('username', newName);\n    if (image) {\n      formData.append('image', image); // Append image file\n    }\n\n    try {\n      const response = await axios.post(\"http://localhost:3000/update-profile\", formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      alert(response.data.message);\n    } catch (error) {\n      console.error(\"Error updating profile:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: user && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newName,\n          onChange: e => setNewName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", user.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: image,\n          alt: \"Profile\",\n          width: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdateProfile,\n        children: \"Update Profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"YSXiO9702/pcKiLYbpkfpmXFj4c=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","ProfilePage","user","setUser","image","setImage","newName","setNewName","fetchUserData","response","get","params","email","data","username","error","console","handleImageChange","e","URL","createObjectURL","target","files","handleUpdateProfile","formData","FormData","append","post","headers","alert","message","value"],"sources":["C:/xampp/htdocs/intellicleanse/intellicleanse/src/components/ProfilePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ProfilePage = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [image, setImage] = useState(null);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:3000/profile\", {\r\n          params: { email: \"user@example.com\" }  // replace with dynamic user email if needed\r\n        });\r\n        setUser(response.data);\r\n        setImage(response.data.image);  // Set the image from the database (if exists)\r\n        setNewName(response.data.username);  // Set the existing name\r\n      } catch (error) {\r\n        console.error(\"Error fetching user data:\", error);\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const handleImageChange = (e) => {\r\n    setImage(URL.createObjectURL(e.target.files[0]));  // Preview the image before uploading\r\n  };\r\n\r\n  const handleUpdateProfile = async () => {\r\n    const formData = new FormData();\r\n    formData.append('email', \"user@example.com\");  // replace with dynamic user email\r\n    formData.append('username', newName);\r\n    if (image) {\r\n      formData.append('image', image);  // Append image file\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post(\"http://localhost:3000/update-profile\", formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      });\r\n      alert(response.data.message);\r\n    } catch (error) {\r\n      console.error(\"Error updating profile:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {user && (\r\n        <div>\r\n          <h2>Profile</h2>\r\n          <p>Name: <input type=\"text\" value={newName} onChange={(e) => setNewName(e.target.value)} /></p>\r\n          <p>Email: {user.email}</p>\r\n          <p>\r\n            <img src={image} alt=\"Profile\" width=\"100\" />\r\n            <input type=\"file\" onChange={handleImageChange} />\r\n          </p>\r\n          <button onClick={handleUpdateProfile}>Update Profile</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}