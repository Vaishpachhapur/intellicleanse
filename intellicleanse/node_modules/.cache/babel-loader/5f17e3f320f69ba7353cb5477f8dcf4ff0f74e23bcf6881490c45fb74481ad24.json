{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\intellicleanse\\\\intellicleanse\\\\src\\\\components\\\\ProfilePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./ProfilePage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProfilePage = () => {\n  _s();\n  const [profile, setProfile] = useState({\n    name: \"\",\n    email: \"\",\n    dob: \"\"\n  });\n  const [isEditing, setIsEditing] = useState(false);\n  const userId = 1; // Replace with dynamic user ID, e.g., from session or auth\n\n  useEffect(() => {\n    // Fetch user profile data when component loads\n    fetch(`http://localhost:5000/api/profile/${userId}`).then(response => response.json()).then(data => setProfile(data)).catch(error => console.error(\"Error fetching profile data:\", error));\n  }, [userId]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setProfile({\n      ...profile,\n      [name]: value\n    });\n  };\n  const handleSave = () => {\n    fetch(`http://localhost:5000/api/profile/${userId}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(profile)\n    }).then(response => response.json()).then(() => {\n      setIsEditing(false);\n      alert(\"Profile updated successfully!\");\n    }).catch(error => console.error(\"Error updating profile:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: profile.name,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: profile.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Email:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        value: profile.email,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: profile.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Date of Birth:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"dob\",\n        value: profile.dob,\n        onChange: handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: profile.dob\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsEditing(true),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(ProfilePage, \"acjadG3CvQLNq0zuWWEs9hQNpBY=\");\n_c = ProfilePage;\nexport default ProfilePage;\nvar _c;\n$RefreshReg$(_c, \"ProfilePage\");","map":{"version":3,"names":["React","useState","useEffect","ProfilePage","profile","setProfile","name","email","dob","isEditing","setIsEditing","userId","fetch","then","response","json","data","catch","error","console","handleInputChange","e","value","target","handleSave","method","headers","body","JSON","stringify","alert"],"sources":["C:/xampp/htdocs/intellicleanse/intellicleanse/src/components/ProfilePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./ProfilePage.css\";\r\n\r\nconst ProfilePage = () => {\r\n  const [profile, setProfile] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    dob: \"\",\r\n  });\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  const userId = 1; // Replace with dynamic user ID, e.g., from session or auth\r\n\r\n  useEffect(() => {\r\n    // Fetch user profile data when component loads\r\n    fetch(`http://localhost:5000/api/profile/${userId}`)\r\n      .then((response) => response.json())\r\n      .then((data) => setProfile(data))\r\n      .catch((error) => console.error(\"Error fetching profile data:\", error));\r\n  }, [userId]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setProfile({ ...profile, [name]: value });\r\n  };\r\n\r\n  const handleSave = () => {\r\n    fetch(`http://localhost:5000/api/profile/${userId}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(profile),\r\n    })\r\n      .then((response) => response.json())\r\n      .then(() => {\r\n        setIsEditing(false);\r\n        alert(\"Profile updated successfully!\");\r\n      })\r\n      .catch((error) => console.error(\"Error updating profile:\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"profile-page\">\r\n      <h2>User Profile</h2>\r\n      <div className=\"profile-form\">\r\n        <label>Name:</label>\r\n        {isEditing ? (\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={profile.name}\r\n            onChange={handleInputChange}\r\n          />\r\n        ) : (\r\n          <p>{profile.name}</p>\r\n        )}\r\n\r\n        <label>Email:</label>\r\n        {isEditing ? (\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={profile.email}\r\n            onChange={handleInputChange}\r\n          />\r\n        ) : (\r\n          <p>{profile.email}</p>\r\n        )}\r\n\r\n        <label>Date of Birth:</label>\r\n        {isEditing ? (\r\n          <input\r\n            type=\"date\"\r\n            name=\"dob\"\r\n            value={profile.dob}\r\n            onChange={handleInputChange}\r\n          />\r\n        ) : (\r\n          <p>{profile.dob}</p>\r\n        )}\r\n\r\n        {isEditing ? (\r\n          <button onClick={handleSave}>Save</button>\r\n        ) : (\r\n          <button onClick={() => setIsEditing(true)}>Edit</button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}