{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\intellicleanse\\\\intellicleanse\\\\src\\\\components\\\\RedundancyCleaning.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./RedundancyCleaning.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RedundancyCleaning = () => {\n  _s();\n  const [dataset, setDataset] = useState(null);\n  const [cleanedData, setCleanedData] = useState(null);\n  const [summary, setSummary] = useState(null);\n\n  // Fetch dataset from the backend\n  useEffect(() => {\n    fetch(\"http://localhost:3000/api/get-dataset\").then(response => response.json()).then(data => {\n      if (data.error) {\n        alert(data.error);\n      } else {\n        setDataset(data);\n      }\n    }).catch(error => console.error(\"Error fetching dataset:\", error));\n  }, []);\n\n  // Handle data cleaning request\n  const handleCleanData = () => {\n    if (!dataset) return;\n    fetch(\"http://localhost:5000/api/clean-data\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        data: dataset.data\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.error) {\n        alert(data.error);\n      } else {\n        setCleanedData(data.cleaned_data);\n        setSummary(data.summary);\n      }\n    }).catch(error => console.error(\"Error cleaning data:\", error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"redundancy-cleaning-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Redundancy and Consistency Cleaning\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Detect and clean redundant rows/columns and handle missing values.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), dataset ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Original Dataset Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: dataset.columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: col\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: dataset.data.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(row).map((val, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCleanData,\n        className: \"clean-btn\",\n        children: \"Clean Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading dataset...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this), cleanedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Cleaned Dataset Preview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(cleanedData[0]).map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: col\n            }, col, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: cleanedData.map((row, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(row).map((val, i) => /*#__PURE__*/_jsxDEV(\"td\", {\n              children: val\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"summary\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Cleaning Summary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Duplicates Removed: \", summary.duplicates_removed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Missing Values Handled: \", summary.missing_values_handled]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Redundant Columns Removed: \", summary.redundant_columns_removed]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(RedundancyCleaning, \"zZdba/KkWCpvTu/472IW6zDrma0=\");\n_c = RedundancyCleaning;\nexport default RedundancyCleaning;\nvar _c;\n$RefreshReg$(_c, \"RedundancyCleaning\");","map":{"version":3,"names":["React","useState","useEffect","RedundancyCleaning","dataset","setDataset","cleanedData","setCleanedData","summary","setSummary","fetch","then","response","json","data","error","alert","catch","console","handleCleanData","method","headers","body","JSON","stringify","cleaned_data","columns","map","col","row","index","Object","values","val","i","keys","duplicates_removed","missing_values_handled","redundant_columns_removed"],"sources":["C:/xampp/htdocs/intellicleanse/intellicleanse/src/components/RedundancyCleaning.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./RedundancyCleaning.css\";\r\n\r\nconst RedundancyCleaning = () => {\r\n  const [dataset, setDataset] = useState(null);\r\n  const [cleanedData, setCleanedData] = useState(null);\r\n  const [summary, setSummary] = useState(null);\r\n\r\n  // Fetch dataset from the backend\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:3000/api/get-dataset\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          alert(data.error);\r\n        } else {\r\n          setDataset(data);\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error fetching dataset:\", error));\r\n  }, []);\r\n\r\n  // Handle data cleaning request\r\n  const handleCleanData = () => {\r\n    if (!dataset) return;\r\n\r\n    fetch(\"http://localhost:5000/api/clean-data\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ data: dataset.data }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          alert(data.error);\r\n        } else {\r\n          setCleanedData(data.cleaned_data);\r\n          setSummary(data.summary);\r\n        }\r\n      })\r\n      .catch((error) => console.error(\"Error cleaning data:\", error));\r\n  };\r\n\r\n  return (\r\n    <div className=\"redundancy-cleaning-container\">\r\n      <h2>Redundancy and Consistency Cleaning</h2>\r\n      <p>Detect and clean redundant rows/columns and handle missing values.</p>\r\n\r\n      {dataset ? (\r\n        <div>\r\n          <h3>Original Dataset Preview</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {dataset.columns.map((col) => (\r\n                  <th key={col}>{col}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {dataset.data.map((row, index) => (\r\n                <tr key={index}>\r\n                  {Object.values(row).map((val, i) => (\r\n                    <td key={i}>{val}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <button onClick={handleCleanData} className=\"clean-btn\">\r\n            Clean Data\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <p>Loading dataset...</p>\r\n      )}\r\n\r\n      {cleanedData && (\r\n        <div>\r\n          <h3>Cleaned Dataset Preview</h3>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                {Object.keys(cleanedData[0]).map((col) => (\r\n                  <th key={col}>{col}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {cleanedData.map((row, index) => (\r\n                <tr key={index}>\r\n                  {Object.values(row).map((val, i) => (\r\n                    <td key={i}>{val}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n          <div className=\"summary\">\r\n            <h4>Cleaning Summary</h4>\r\n            <p>Duplicates Removed: {summary.duplicates_removed}</p>\r\n            <p>Missing Values Handled: {summary.missing_values_handled}</p>\r\n            <p>Redundant Columns Removed: {summary.redundant_columns_removed}</p>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RedundancyCleaning;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}