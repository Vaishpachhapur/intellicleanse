{"ast":null,"code":"// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import Sidebar from \"./Sidebar\"; // Import Sidebar component\n// import axios from \"axios\";\n// import \"./DataUpload.css\";\n\n// const DataUpload = () => {\n//   const [file, setFile] = useState(null);\n//   const navigate = useNavigate();\n\n//   // Define the functionalities you want to display in the sidebar\n//   const functionalities = [\n//     \"Data Upload\",\n//     \"Preview and Profiling\",\n//     \"Redundancy and Consistency Cleaning\",\n//     \"Outlier Detection\",\n//     \"Data Standardization\",\n//     \"Data Transformation\",\n//     \"Collaborative Cleaning\",\n//     \"Export Options\",\n//     \"Profile\", \n//     \"Logout\"\n//   ];\n\n//   // Handle functionality click and navigate to the respective route\n//   const handleFunctionalityClick = (name) => {\n//     console.log(\"Selected functionality:\", name);\n\n//     // Mapping functionalities to routes\n//     const routeMap = {\n//       \"Data Upload\": \"/dataupload\",\n//       \"Preview and Profiling\": \"/previewandprofiling\",\n//       \"Redundancy and Consistency Cleaning\": \"/redundancy-cleaning\",\n//       \"Outlier Detection\": \"/outlier-detection\",\n//       \"Data Standardization\": \"/data-standardization\",\n//       \"Data Transformation\": \"/data-transformation\",\n//       \"Collaborative Cleaning\": \"/collaborative-cleaning\",\n//       \"Export Options\": \"/export-options\",\n//       \"Profile\": \"/profile\",\n//       \"Logout\": \"/logout\",\n//     };\n\n//     // Navigate to the respective route\n//     if (routeMap[name]) {\n//       navigate(routeMap[name]);\n//     }\n//   };\n\n//   // Handle file change\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   // Handle file upload\n//   const handleUpload = async () => {\n//     if (!file) return alert(\"Please select a file.\");\n\n//     const formData = new FormData();\n//     formData.append(\"file\", file);\n\n//     try {\n//       const response = await axios.post(\"http://localhost:3000/upload\", formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//         },\n//       });\n\n//       if (response.status === 200) {\n//         alert(\"File uploaded successfully!\");\n//         navigate(\"/previewandprofiling\"); // Navigate to preview and profiling page after upload\n//       }\n//     } catch (error) {\n//       console.error(\"Error uploading file:\", error);\n//       alert(\"There was an error uploading the file.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"dashboard-container\">\n//       {/* Sidebar for navigation */}\n//       <Sidebar\n//         functionalities={functionalities}\n//         onFunctionalityClick={handleFunctionalityClick} // Pass click handler\n//       />\n\n//       {/* Main content area */}\n//       <div className=\"data-upload-container\">\n//         <div className=\"data-upload\">\n//           <h2>Upload Dataset</h2>\n//           <div className=\"file-upload\">\n//             <input type=\"file\" accept=\".csv, .xlsx\" onChange={handleFileChange} />\n//           </div>\n//           <button onClick={handleUpload}>Upload</button>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DataUpload;\n\n// import React, { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import Sidebar from \"./Sidebar\"; // Import Sidebar component\n// import axios from \"axios\";\n// import \"./DataUpload.css\";\n\n// const DataUpload = () => {\n//   const [file, setFile] = useState(null);\n//   const [previewData, setPreviewData] = useState(null); // State to store preview and profiling data\n//   const navigate = useNavigate();\n\n//   // Define the functionalities you want to display in the sidebar\n//   const functionalities = [\n//     \"Data Upload\",\n//     \"Preview and Profiling\",\n//     \"Redundancy and Consistency Cleaning\",\n//     \"Outlier Detection\",\n//     \"Data Standardization\",\n//     \"Data Transformation\",\n//     \"Collaborative Cleaning\",\n//     \"Export Options\",\n//     \"Profile\",\n//     \"Logout\",\n//   ];\n\n//   // Handle functionality click and navigate to the respective route\n//   const handleFunctionalityClick = (name) => {\n//     console.log(\"Selected functionality:\", name);\n\n//     // Mapping functionalities to routes\n//     const routeMap = {\n//       \"Data Upload\": \"/dataupload\",\n//       \"Preview and Profiling\": \"/previewandprofiling\",\n//       \"Redundancy and Consistency Cleaning\": \"/redundancy-cleaning\",\n//       \"Outlier Detection\": \"/outlier-detection\",\n//       \"Data Standardization\": \"/data-standardization\",\n//       \"Data Transformation\": \"/data-transformation\",\n//       \"Collaborative Cleaning\": \"/collaborative-cleaning\",\n//       \"Export Options\": \"/export-options\",\n//       \"Profile\": \"/profile\",\n//       \"Logout\": \"/logout\",\n//     };\n\n//     // Navigate to the respective route\n//     if (routeMap[name]) {\n//       navigate(routeMap[name]);\n//     }\n//   };\n\n//   // Handle file change\n//   const handleFileChange = (e) => {\n//     setFile(e.target.files[0]);\n//   };\n\n//   // Handle file upload and preview\n//   const handleUpload = async () => {\n//     if (!file) return alert(\"Please select a file.\");\n\n//     const formData = new FormData();\n//     formData.append(\"file\", file);\n\n//     try {\n//       // Upload the file\n//       const uploadResponse = await axios.post(\"http://localhost:3000/upload\", formData, {\n//         headers: {\n//           \"Content-Type\": \"multipart/form-data\",\n//         },\n//       });\n\n//       if (uploadResponse.status === 200) {\n//         alert(\"File uploaded successfully!\");\n\n//         // Fetch the preview and profiling data\n//         const tableName = file.name.split(\".\")[0]; // Assuming the table name is derived from the file name\n//         const previewResponse = await axios.get(\"http://localhost:5001/previewandprofiling\", {\n//           params: { table_name: tableName },\n//         });\n\n//         if (previewResponse.status === 200) {\n//           setPreviewData(previewResponse.data); // Store the preview data in state\n//         }\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//       alert(\"There was an error processing the file.\");\n//     }\n//   };\n\n//   return (\n//     <div className=\"dashboard-container\">\n//       {/* Sidebar for navigation */}\n//       <Sidebar\n//         functionalities={functionalities}\n//         onFunctionalityClick={handleFunctionalityClick} // Pass click handler\n//       />\n\n//       {/* Main content area */}\n//       <div className=\"data-upload-container\">\n//         <div className=\"data-upload\">\n//           <h2>Upload Dataset</h2>\n//           <div className=\"file-upload\">\n//             <input type=\"file\" accept=\".csv, .xlsx\" onChange={handleFileChange} />\n//           </div>\n//           <button onClick={handleUpload}>Upload and Preview</button>\n//         </div>\n\n//         {/* Display preview and profiling data */}\n//         {previewData && (\n//           <div className=\"preview-profiling\">\n//             <h2>Dataset Preview and Profiling</h2>\n//             <div>\n//               <h3>Column Names:</h3>\n//               <ul>\n//                 {previewData.column_names.map((col, index) => (\n//                   <li key={index}>{col}</li>\n//                 ))}\n//               </ul>\n//             </div>\n//             <div>\n//               <h3>Data Types:</h3>\n//               <ul>\n//                 {previewData.data_types.map((type, index) => (\n//                   <li key={index}>{type}</li>\n//                 ))}\n//               </ul>\n//             </div>\n//             <div>\n//               <h3>Missing Values:</h3>\n//               <ul>\n//                 {previewData.missing_values.map((value, index) => (\n//                   <li key={index}>{value}</li>\n//                 ))}\n//               </ul>\n//             </div>\n//             <div>\n//               <h3>Number of Duplicates:</h3>\n//               <p>{previewData.duplicates}</p>\n//             </div>\n//             <div>\n//               <h3>Key Statistics:</h3>\n//               <pre>{JSON.stringify(previewData.key_statistics, null, 2)}</pre>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default DataUpload;","map":{"version":3,"names":[],"sources":["C:/xampp/htdocs/intellicleanse/intellicleanse/src/components/DataUpload.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import Sidebar from \"./Sidebar\"; // Import Sidebar component\r\n// import axios from \"axios\";\r\n// import \"./DataUpload.css\";\r\n\r\n// const DataUpload = () => {\r\n//   const [file, setFile] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   // Define the functionalities you want to display in the sidebar\r\n//   const functionalities = [\r\n//     \"Data Upload\",\r\n//     \"Preview and Profiling\",\r\n//     \"Redundancy and Consistency Cleaning\",\r\n//     \"Outlier Detection\",\r\n//     \"Data Standardization\",\r\n//     \"Data Transformation\",\r\n//     \"Collaborative Cleaning\",\r\n//     \"Export Options\",\r\n//     \"Profile\", \r\n//     \"Logout\"\r\n//   ];\r\n\r\n//   // Handle functionality click and navigate to the respective route\r\n//   const handleFunctionalityClick = (name) => {\r\n//     console.log(\"Selected functionality:\", name);\r\n\r\n//     // Mapping functionalities to routes\r\n//     const routeMap = {\r\n//       \"Data Upload\": \"/dataupload\",\r\n//       \"Preview and Profiling\": \"/previewandprofiling\",\r\n//       \"Redundancy and Consistency Cleaning\": \"/redundancy-cleaning\",\r\n//       \"Outlier Detection\": \"/outlier-detection\",\r\n//       \"Data Standardization\": \"/data-standardization\",\r\n//       \"Data Transformation\": \"/data-transformation\",\r\n//       \"Collaborative Cleaning\": \"/collaborative-cleaning\",\r\n//       \"Export Options\": \"/export-options\",\r\n//       \"Profile\": \"/profile\",\r\n//       \"Logout\": \"/logout\",\r\n//     };\r\n\r\n//     // Navigate to the respective route\r\n//     if (routeMap[name]) {\r\n//       navigate(routeMap[name]);\r\n//     }\r\n//   };\r\n\r\n//   // Handle file change\r\n//   const handleFileChange = (e) => {\r\n//     setFile(e.target.files[0]);\r\n//   };\r\n\r\n//   // Handle file upload\r\n//   const handleUpload = async () => {\r\n//     if (!file) return alert(\"Please select a file.\");\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"file\", file);\r\n\r\n//     try {\r\n//       const response = await axios.post(\"http://localhost:3000/upload\", formData, {\r\n//         headers: {\r\n//           \"Content-Type\": \"multipart/form-data\",\r\n//         },\r\n//       });\r\n\r\n//       if (response.status === 200) {\r\n//         alert(\"File uploaded successfully!\");\r\n//         navigate(\"/previewandprofiling\"); // Navigate to preview and profiling page after upload\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error uploading file:\", error);\r\n//       alert(\"There was an error uploading the file.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard-container\">\r\n//       {/* Sidebar for navigation */}\r\n//       <Sidebar\r\n//         functionalities={functionalities}\r\n//         onFunctionalityClick={handleFunctionalityClick} // Pass click handler\r\n//       />\r\n\r\n//       {/* Main content area */}\r\n//       <div className=\"data-upload-container\">\r\n//         <div className=\"data-upload\">\r\n//           <h2>Upload Dataset</h2>\r\n//           <div className=\"file-upload\">\r\n//             <input type=\"file\" accept=\".csv, .xlsx\" onChange={handleFileChange} />\r\n//           </div>\r\n//           <button onClick={handleUpload}>Upload</button>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DataUpload;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import Sidebar from \"./Sidebar\"; // Import Sidebar component\r\n// import axios from \"axios\";\r\n// import \"./DataUpload.css\";\r\n\r\n// const DataUpload = () => {\r\n//   const [file, setFile] = useState(null);\r\n//   const [previewData, setPreviewData] = useState(null); // State to store preview and profiling data\r\n//   const navigate = useNavigate();\r\n\r\n//   // Define the functionalities you want to display in the sidebar\r\n//   const functionalities = [\r\n//     \"Data Upload\",\r\n//     \"Preview and Profiling\",\r\n//     \"Redundancy and Consistency Cleaning\",\r\n//     \"Outlier Detection\",\r\n//     \"Data Standardization\",\r\n//     \"Data Transformation\",\r\n//     \"Collaborative Cleaning\",\r\n//     \"Export Options\",\r\n//     \"Profile\",\r\n//     \"Logout\",\r\n//   ];\r\n\r\n//   // Handle functionality click and navigate to the respective route\r\n//   const handleFunctionalityClick = (name) => {\r\n//     console.log(\"Selected functionality:\", name);\r\n\r\n//     // Mapping functionalities to routes\r\n//     const routeMap = {\r\n//       \"Data Upload\": \"/dataupload\",\r\n//       \"Preview and Profiling\": \"/previewandprofiling\",\r\n//       \"Redundancy and Consistency Cleaning\": \"/redundancy-cleaning\",\r\n//       \"Outlier Detection\": \"/outlier-detection\",\r\n//       \"Data Standardization\": \"/data-standardization\",\r\n//       \"Data Transformation\": \"/data-transformation\",\r\n//       \"Collaborative Cleaning\": \"/collaborative-cleaning\",\r\n//       \"Export Options\": \"/export-options\",\r\n//       \"Profile\": \"/profile\",\r\n//       \"Logout\": \"/logout\",\r\n//     };\r\n\r\n//     // Navigate to the respective route\r\n//     if (routeMap[name]) {\r\n//       navigate(routeMap[name]);\r\n//     }\r\n//   };\r\n\r\n//   // Handle file change\r\n//   const handleFileChange = (e) => {\r\n//     setFile(e.target.files[0]);\r\n//   };\r\n\r\n//   // Handle file upload and preview\r\n//   const handleUpload = async () => {\r\n//     if (!file) return alert(\"Please select a file.\");\r\n\r\n//     const formData = new FormData();\r\n//     formData.append(\"file\", file);\r\n\r\n//     try {\r\n//       // Upload the file\r\n//       const uploadResponse = await axios.post(\"http://localhost:3000/upload\", formData, {\r\n//         headers: {\r\n//           \"Content-Type\": \"multipart/form-data\",\r\n//         },\r\n//       });\r\n\r\n//       if (uploadResponse.status === 200) {\r\n//         alert(\"File uploaded successfully!\");\r\n\r\n//         // Fetch the preview and profiling data\r\n//         const tableName = file.name.split(\".\")[0]; // Assuming the table name is derived from the file name\r\n//         const previewResponse = await axios.get(\"http://localhost:5001/previewandprofiling\", {\r\n//           params: { table_name: tableName },\r\n//         });\r\n\r\n//         if (previewResponse.status === 200) {\r\n//           setPreviewData(previewResponse.data); // Store the preview data in state\r\n//         }\r\n//       }\r\n//     } catch (error) {\r\n//       console.error(\"Error:\", error);\r\n//       alert(\"There was an error processing the file.\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"dashboard-container\">\r\n//       {/* Sidebar for navigation */}\r\n//       <Sidebar\r\n//         functionalities={functionalities}\r\n//         onFunctionalityClick={handleFunctionalityClick} // Pass click handler\r\n//       />\r\n\r\n//       {/* Main content area */}\r\n//       <div className=\"data-upload-container\">\r\n//         <div className=\"data-upload\">\r\n//           <h2>Upload Dataset</h2>\r\n//           <div className=\"file-upload\">\r\n//             <input type=\"file\" accept=\".csv, .xlsx\" onChange={handleFileChange} />\r\n//           </div>\r\n//           <button onClick={handleUpload}>Upload and Preview</button>\r\n//         </div>\r\n\r\n//         {/* Display preview and profiling data */}\r\n//         {previewData && (\r\n//           <div className=\"preview-profiling\">\r\n//             <h2>Dataset Preview and Profiling</h2>\r\n//             <div>\r\n//               <h3>Column Names:</h3>\r\n//               <ul>\r\n//                 {previewData.column_names.map((col, index) => (\r\n//                   <li key={index}>{col}</li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//             <div>\r\n//               <h3>Data Types:</h3>\r\n//               <ul>\r\n//                 {previewData.data_types.map((type, index) => (\r\n//                   <li key={index}>{type}</li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//             <div>\r\n//               <h3>Missing Values:</h3>\r\n//               <ul>\r\n//                 {previewData.missing_values.map((value, index) => (\r\n//                   <li key={index}>{value}</li>\r\n//                 ))}\r\n//               </ul>\r\n//             </div>\r\n//             <div>\r\n//               <h3>Number of Duplicates:</h3>\r\n//               <p>{previewData.duplicates}</p>\r\n//             </div>\r\n//             <div>\r\n//               <h3>Key Statistics:</h3>\r\n//               <pre>{JSON.stringify(previewData.key_statistics, null, 2)}</pre>\r\n//             </div>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default DataUpload;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}