{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useLocation } from \"react-router-dom\"; // Import useLocation for current path\n// import \"./Sidebar.css\"; // Import the CSS file for styling\n\n// const Sidebar = ({ functionalities, onFunctionalityClick }) => {\n//   const [collapsed, setCollapsed] = useState(false);\n//   const location = useLocation(); // Get the current route path\n\n//   // Define the paths where the sidebar should NOT be visible\n//   const pathsWithoutNav = [\"/\",\"/login\",\"/signup\", \"/contact\", \"\"];\n\n//   // Toggle collapse state\n//   const toggleSidebar = () => {\n//     setCollapsed(!collapsed);\n//   };\n\n//   // Check if the current path is one of the paths without navigation\n//   const isSidebarVisible = !pathsWithoutNav.includes(location.pathname);\n\n//   return (\n//     <>\n//       <br />\n//       <br />\n//       <br />\n//       <br />\n\n//       {/* Conditionally render Sidebar based on current path */}\n//       {isSidebarVisible && (\n//         <div className={`sidebar ${collapsed ? \"collapsed\" : \"\"}`}>\n//           <button className=\"collapse-btn\" onClick={toggleSidebar}>\n//             {collapsed ? \">\" : \"<\"} {/* Icon indicating collapse/expand */}\n//           </button>\n//           <ul>\n//             {functionalities.map((func, index) => (\n//               <li key={index} onClick={() => onFunctionalityClick(func)}>\n//                 {func}\n//               </li>\n//             ))}\n//           </ul>\n//         </div>\n//       )}\n//     </>\n//   );\n// };\n\n// export default Sidebar;","map":{"version":3,"names":[],"sources":["C:/xampp/htdocs/intellicleanse/intellicleanse/src/components/Sidebar.jsx"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import { useLocation } from \"react-router-dom\"; // Import useLocation for current path\r\n// import \"./Sidebar.css\"; // Import the CSS file for styling\r\n\r\n// const Sidebar = ({ functionalities, onFunctionalityClick }) => {\r\n//   const [collapsed, setCollapsed] = useState(false);\r\n//   const location = useLocation(); // Get the current route path\r\n\r\n//   // Define the paths where the sidebar should NOT be visible\r\n//   const pathsWithoutNav = [\"/\",\"/login\",\"/signup\", \"/contact\", \"\"];\r\n\r\n//   // Toggle collapse state\r\n//   const toggleSidebar = () => {\r\n//     setCollapsed(!collapsed);\r\n//   };\r\n\r\n//   // Check if the current path is one of the paths without navigation\r\n//   const isSidebarVisible = !pathsWithoutNav.includes(location.pathname);\r\n\r\n//   return (\r\n//     <>\r\n//       <br />\r\n//       <br />\r\n//       <br />\r\n//       <br />\r\n\r\n//       {/* Conditionally render Sidebar based on current path */}\r\n//       {isSidebarVisible && (\r\n//         <div className={`sidebar ${collapsed ? \"collapsed\" : \"\"}`}>\r\n//           <button className=\"collapse-btn\" onClick={toggleSidebar}>\r\n//             {collapsed ? \">\" : \"<\"} {/* Icon indicating collapse/expand */}\r\n//           </button>\r\n//           <ul>\r\n//             {functionalities.map((func, index) => (\r\n//               <li key={index} onClick={() => onFunctionalityClick(func)}>\r\n//                 {func}\r\n//               </li>\r\n//             ))}\r\n//           </ul>\r\n//         </div>\r\n//       )}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Sidebar;\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}